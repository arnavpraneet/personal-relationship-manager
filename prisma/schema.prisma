// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int         @id @default(autoincrement())
  email         String      @unique
  passwordHash  String
  firstName     String?
  lastName      String?
  profileImage  String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  contacts      Contact[]
  reminders     Reminder[]
}

model Contact {
  id            Int         @id @default(autoincrement())
  userId        Int
  firstName     String
  lastName      String?
  email         String?
  phoneNumber   String?
  address       String?
  birthday      DateTime?
  profileImage  String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  notes         Note[]
  reminders     Reminder[]
}

model Note {
  id              Int       @id @default(autoincrement())
  contactId       Int
  note            String
  interactionDate DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  contact         Contact   @relation(fields: [contactId], references: [id], onDelete: Cascade)
}

model Reminder {
  id            Int       @id @default(autoincrement())
  userId        Int
  contactId     Int?
  reminderDate  DateTime
  description   String
  isRecurring   Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  contact       Contact?  @relation(fields: [contactId], references: [id], onDelete: SetNull)
}
